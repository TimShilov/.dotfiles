-- This is a demo config to showcase some of the most important commands.
-- It is meant to be changed and configured, as it is intentionally kept sparse.
-- For a (much) more advanced configuration example see my dotfiles:
-- https://github.com/FelixKratz/dotfiles

-- Load all defined colors
dofile(os.getenv("CONFIG_DIR") .. "/colors.lua")

-- Load all defined icons
dofile(os.getenv("CONFIG_DIR") .. "/icons.lua")

local ITEM_DIR = os.getenv("CONFIG_DIR") .. "/items" -- Directory where the items are configured
local PLUGIN_DIR = os.getenv("CONFIG_DIR") .. "/plugins"

-- Bar Appearance
-- Configuring the general appearance of the bar.
-- These are only some of the options available. For all options see:
-- https://felixkratz.github.io/SketchyBar/config/bar
-- If you are looking for other colors, see the color picker:
-- https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

-- FONT="SF Pro" -- Needs to have Regular, Bold, Semibold, Heavy and Black variants
local FONT = "JetBrainsMono NF" -- Needs to have Regular, Bold, Semibold, Heavy and Black variants
local SHADOW = "on"
local PADDINGS = 4 -- All paddings use this value (icon, label, background and bar paddings)
local ITEM_SEPARATOR_PADDING = 8

local POPUP_BORDER_WIDTH = 2
local POPUP_CORNER_RADIUS = 11

-- Setting up the general bar appearance and default values
sketchybar({
    bar = {
        height = 38,
        border_width = 0,
        position = "top",
        padding_left = 0,
        padding_right = 0,
        color = BAR_COLOR,
        display = "all",
        topmost = "off",
        sticky = "on",
        font_smoothing = "off",
        shadow = SHADOW,
        notch_width = 200,
    },
    default = {
        drawing = "on",
        updates = "when_shown",
        label = {
            font = FONT .. ":Regular:16.0",
            color = LABEL_COLOR,
            padding_left = PADDINGS,
            padding_right = ITEM_SEPARATOR_PADDING,
        },
        icon = {
            font = FONT .. ":Bold:16.0",
            color = ICON_COLOR,
            padding_left = PADDINGS,
            padding_right = PADDINGS,
        },
        background = {
            padding_left = PADDINGS,
            padding_right = PADDINGS,
        },
        popup = {
            background = {
                border_width = POPUP_BORDER_WIDTH,
                corner_radius = POPUP_CORNER_RADIUS,
                border_color = POPUP_BORDER_COLOR,
                color = POPUP_BACKGROUND_COLOR,
                shadow = {
                    drawing = SHADOW,
                },
            },
        },
    },
    hotload = true,
})

-- Adding Mission Control Space Indicators
-- Let's add some mission control spaces:
-- https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item
-- to indicate active and available mission control spaces.

-- local SPACE_ICONS = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}
-- for i, icon in ipairs(SPACE_ICONS) do
--     local sid = tostring(i)
--     local space = {
--         space = sid,
--         icon = icon,
--         icon = {
--             padding_left = 7,
--             padding_right = 7,
--         },
--         background = {
--             color = 0x40ffffff,
--             corner_radius = 5,
--             height = 25,
--         },
--         label = {
--             drawing = "off",
--         },
--         script = PLUGIN_DIR .. "/space.lua",
--         click_script = "yabai -m space --focus " .. sid,
--     }
--     sketchybar({
--         add = {
--             space = "space." .. sid,
--             position = "left",
--         },
--         set = {
--             ["space." .. sid] = space,
--         },
--     })
-- end

-- Adding Left Items
-- We add some regular items to the left side of the bar, where
-- only the properties deviating from the current defaults need to be set

-- dofile(ITEM_DIR .. "/spaces.lua")

-- sketchybar({
--     add = {
--         item = "front_app",
--         position = "left",
--     },
--     set = {
--         front_app = {
--             icon = {
--                 drawing = "off",
--             },
--             script = PLUGIN_DIR .. "/front_app.lua",
--         },
--     },
--     subscribe = {
--         front_app = "front_app_switched",
--     },
-- })

-- Adding Right Items
-- In the same way as the left items we can add items to the right side.
-- Additional position (e.g. center) are available, see:
-- https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

-- Some items refresh on a fixed cycle, e.g. the clock runs its script once
-- every 10s. Other items respond to events they subscribe to, e.g. the
-- volume.lua script is only executed once an actual change in system audio
-- volume is registered. More info about the event system can be found here:
-- https://felixkratz.github.io/SketchyBar/config/events

-- TODO: Find a way to show task in the center but only on external display
sketchybar({
    add = {
        item = "clock",
        position = "right",
    },
    set = {
        clock = {
            update_freq = 10,
            script = PLUGIN_DIR .. "/clock.lua",
        },
    },
})

sketchybar({
    add = {
        item = "battery",
        position = "right",
    },
    set = {
        battery = {
            update_freq = 120,
            script = PLUGIN_DIR .. "/battery.lua",
        },
    },
    subscribe = {
        battery = {"system_woke", "power_source_change"},
    },
})

sketchybar({
    add = {
        item = "task",
        position = "left",
    },
    set = {
        task = {
            update_freq = 15,
            script = PLUGIN_DIR .. "/task.lua",
        },
    },
})

sketchybar({
    add = {
        item = "github",
        position = "right",
    },
    set = {
        github = {
            update_freq = 15,
            script = PLUGIN_DIR .. "/github.lua",
        },
    },
})

sketchybar({
    add = {
        item = "jira",
        position = "right",
    },
    set = {
        jira = {
            update_freq = 15,
            script = PLUGIN_DIR .. "/jira.lua",
        },
    },
})

sketchybar({
    add = {
        item = "email",
        position = "right",
    },
    set = {
        email = {
            update_freq = 120,
            script = PLUGIN_DIR .. "/email.lua",
        },
    },
})

-- Force all scripts to run the first time (never do this in a script)
sketchybar({
    update = true,
})
